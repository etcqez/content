---
title: "运维面试题"
date: 2023-03-29T16:06:00+08:00
summary: " "
categories: ["Linux"]
tags: [""]
---

* linux基础
1. linux有几种文件类型
   - 7种,- d b c l p(pipe) s(socket)
2. 提示空间满No space left on device,但df可以看到空间很多,为什么
   - 节点标号使用尽了
3. 删除大文件后df,df -i查看空间时仍然很大
   - 大文件正在使用,硬盘还没释放空间
   - cat /dev/null > <大文件>
4. 在删除大型数据库的表.会大量产生磁盘IO,影响cpu性能,为了不影响性能,怎么做
   - 删除1个数据库的表,在底层只是删除了1个文件
   - 先创建表的硬链接,再删除数据库
     - 此时,链接数为1,系统不会清理磁盘,再利用空闲时候清理
5. 硬链接和软链接的区别
   |          | 硬链接                            | 软链接                                |
   | 本质      | 同1个文件                         | 不是同1个文件                          |
   | 跨设备     | 不支持                            | 支持                                 |
   | Inodes   | 相同                             | 不同                                 |
   | 链接数     | 创建增加,删除减少                  | 创建删除都不变                         |
   | 文件夹     | 不支持                            | 支持                                 |
   | 相对路径   | 原始文件的相对路径是相对于当前工作目录  | 原始文件的相对路径是相对于链接文件的相对路径 |
   | 删除源文件 | 只是链接数减1,但链接文件的访问不受影响 | 链接文件将无法访问                      |
   | 文件类型   | 和源文件相同                       | 链接文件和源文件无关                    |
6. 如何找到1个可执行文件路径
   1. ps aux找到PID
   2. 进入/proc/PID
   3. 里面的链接文件exe的指向即是
7. 4种写法,哪种不同
   #+begin_src shell
ls . /err > all.log 2>&1
ls . /err 2> all.log 1>&2
ls . /err &> all.log
ls . /err 2>&1 > all.log
   #+end_src
   - &后面加数字代表文件描述符
   - 第4种不同,2>&1:把2重定向到1,此时1为标准输出,所以2打印在屏幕上,之后再把1输出到文件
8. root删除不了文件夹
   - 文件夹内有文件有特殊属性a,i
   - chattr -a
   - lsattr
9. 取两个文件的相同和不同行
   - 前提: 两个文件自身没有重复行
   - 相同
     - cat 1 2|sort|uniq -d
     - grep -f 1 2
   - 不相同
     - cat 1 2|sort|uniq -u
10. 算出所有人的年龄总和
    #+begin_src shell
➜  ~ cat > nianling.txt
xiaoming=20
xiaohong=18
xiaoqiang=22
➜  ~ cat nianling.txt
xiaoming=20
xiaohong=18
xiaoqiang=22
➜  ~ cut -d"=" -f2 nianling.txt |tr "\n" + | grep -Eo ".*[0-9]" |bc
60
➜  ~ grep -Eo "[0-9]+" nianling.txt |tr "\n" + |grep -Eo ".*[0-9]" |bc
60
    #+end_src
11. name=evil520;{ echo $name;name=tang;echo $name; };echo $name
12. echo 1 2 |read x y;echo x=$x y=$y
    #+begin_src shell
f@gentoo ~ $ echo 1 2 |read x y;echo x=$x y=$y
x= y=
    #+end_src
    - man bash /pipe
      #+begin_quote
Each  command  in  a  pipeline is executed as a separate process (i.e., in a subshell).
      #+end_quote
    - read x y开启了子进程,x,y在子进程中被赋值
    - 解决方法
      #+begin_src shell
f@gentoo ~ $ echo 1 2 |(read x y;echo x=$x y=$y)
x=1 y=2
f@gentoo ~ $ echo 1 2 |{ read x y;echo x=$x y=$y; }
x=1 y=2
      #+end_src
13. 怎么判断网卡断了
    1. mii-tool -v eth0
    2. ethtool eth0
14. 找到端口冲突的应用程序
    1. ss -ntlp
    2. lsof -i :22
15. 要求将目录YYYY-MM-DD/中所有文件,移动到YYYY-MM/DD下
    - for_dir.sh #1 yyyy-mm-dd10.sh创建YYYY-MM-DD,365天前到当前日期共365个目录,里面有10个文件$RANDOM.log
        #+begin_src shell
    #!/bin/bash
    for i in {1..365};do
            DIR=`date -d "-$i day" +%F`
            mkdir /data/test/$DIR
            cd /data/test/$DIR
            for n in {1..10};do
                    touch $RANDOM.log
            done
    done
        #+end_src
    - for_mv.sh #2 移动到YYYY-MM/DD下
      #+begin_src shell
#!/bin/bash
DIR=/data/test
cd $DIR
for DIR in *;do
           YYYY_MM=`echo $DIR |cut -d"-" -f1,2`
           DD-`echo $DIR |cut -d"-" -f3`
           [ -d $YYYY_MM/$DD ] || mkdir -p $YYYY_MM/$DD &> /dev/null
           mv $DIR/* $YYYY_MM/$DD
      #+end_src
16. 扫描一个网段,判断此网段中主机在线状态,将在线的ip打印出来
    #+begin_src shell
#!/bin/bash
NET=192.168.3
for ID in {1..254};do
          {
          ping -c1 -w1 $NET.$ID &> /dev/null && echo $NET.$ID is up || echo $NET.$ID is down
          }&
done
wait
    #+end_src
17. 取出访问量最多的前几个ip地址
    awk '{print $1}' nginx.access.log-20200428 |sort |uniq -c |sort -nr |head -3
18. 取出ip地址
    1. awk: ifconfig wlan0 |awk '/netmask/{print $2}'
    2. ifconfig wlan0 |sed -rn '2s/^[^0-9]+([0-9.]+) .*$/\1/p'
19. 连接数最多的3个ip
    ss -nt |awk -F" +|:" '/^ESTAB/{print $6}' |sort |uniq -c |sort -nr |head -n3
20. 从1加到100万
    1. time (sum=0;for i in {1..1000000};do let sum+=i;done;echo $sum)
    2. time awk 'BEGIN{sum=0;i=1;while(i<=1000000){sum+=i;i++};print sum}'
